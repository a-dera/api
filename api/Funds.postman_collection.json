{
	"info": {
		"_postman_id": "e5c4da7e-6887-47e6-a6a6-b10044b3ddbc",
		"name": "Funds",
		"description": "The MarketPay Funding API provides endpoints for managing the funds in MarketPay accounts. These management operations include actions such as the transfer of funds from one account to another, the payout of funds to an account holder, and the retrieval of balances in an account.\nFor further information on MarketPay fund management, please visit the [MarketPay documentation](https://docs.duniapay.net/marketpay).\n## Authentication\nTo connect to the MarketPay API, you must use basic authentication credentials of your web service user. If you don't have one, please contact the [Duniapay Support Team](https://support.duniapay.net/hc/en-us/requests/new). Then use its credentials to authenticate your request, for example:\n```\ncurl\n-U \"ws@MarketPlace.YourMarketPlace\":\"YourWsPassword\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\nNote that when going live, you need to generate new web service user credentials to access the [live endpoints](https://docs.duniapay.net/development-resources/live-endpoints).\n## Versioning\nMarketPay API supports versioning of its endpoints through a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\nFor example:\n```\nhttps://cal-test.duniapay.net/cal/services/Fund/v5/accountHolderBalance\n```\n\nContact Support:\n Name: Duniapay Support\n Email: support@duniapay.net",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Retrieve the balance(s) of an account holder.",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"accountHolderCode\": \"<string>\"\n}",
					"options": {
						"raw": {}
					}
				},
				"url": "{{baseUrl}}/accountHolderBalance",
				"description": "This endpoint is used to retrieve the balance(s) of the accounts of an account holder. An account's balances are on a per-currency basis (i.e., an account may have multiple balances: one per currency)."
			},
			"response": [
				{
					"name": "Bad Request - a problem reading or understanding the request.",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"accountHolderCode\": \"<string>\"\n}"
						},
						"url": "{{baseUrl}}/accountHolderBalance"
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Internal Server Error - the server could not process the request.",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"accountHolderCode\": \"<string>\"\n}"
						},
						"url": "{{baseUrl}}/accountHolderBalance"
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Unprocessable Entity - a request validation error.",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"accountHolderCode\": \"<string>\"\n}"
						},
						"url": "{{baseUrl}}/accountHolderBalance"
					},
					"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
					"code": 422,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Forbidden - insufficient permissions to process the request.",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"accountHolderCode\": \"<string>\"\n}"
						},
						"url": "{{baseUrl}}/accountHolderBalance"
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Unauthorized - authentication required.",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"accountHolderCode\": \"<string>\"\n}"
						},
						"url": "{{baseUrl}}/accountHolderBalance"
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "OK - the request has succeeded.",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"accountHolderCode\": \"<string>\"\n}"
						},
						"url": "{{baseUrl}}/accountHolderBalance"
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"pspReference\": \"<string>\",\n \"balancePerAccount\": [\n  {\n   \"accountCode\": \"<string>\",\n   \"detailBalance\": {\n    \"balance\": [\n     {\n      \"value\": \"<long>\",\n      \"currency\": \"<string>\"\n     },\n     {\n      \"value\": \"<long>\",\n      \"currency\": \"<string>\"\n     }\n    ],\n    \"onHoldBalance\": [\n     {\n      \"value\": \"<long>\",\n      \"currency\": \"<string>\"\n     },\n     {\n      \"value\": \"<long>\",\n      \"currency\": \"<string>\"\n     }\n    ],\n    \"pendingBalance\": [\n     {\n      \"value\": \"<long>\",\n      \"currency\": \"<string>\"\n     },\n     {\n      \"value\": \"<long>\",\n      \"currency\": \"<string>\"\n     }\n    ]\n   }\n  },\n  {\n   \"accountCode\": \"<string>\",\n   \"detailBalance\": {\n    \"balance\": [\n     {\n      \"value\": \"<long>\",\n      \"currency\": \"<string>\"\n     },\n     {\n      \"value\": \"<long>\",\n      \"currency\": \"<string>\"\n     }\n    ],\n    \"onHoldBalance\": [\n     {\n      \"value\": \"<long>\",\n      \"currency\": \"<string>\"\n     },\n     {\n      \"value\": \"<long>\",\n      \"currency\": \"<string>\"\n     }\n    ],\n    \"pendingBalance\": [\n     {\n      \"value\": \"<long>\",\n      \"currency\": \"<string>\"\n     },\n     {\n      \"value\": \"<long>\",\n      \"currency\": \"<string>\"\n     }\n    ]\n   }\n  }\n ],\n \"invalidFields\": [\n  {\n   \"errorCode\": \"<integer>\",\n   \"errorDescription\": \"<string>\",\n   \"fieldType\": {\n    \"field\": \"<string>\",\n    \"fieldName\": \"<string>\",\n    \"shareholderCode\": \"<string>\"\n   }\n  },\n  {\n   \"errorCode\": \"<integer>\",\n   \"errorDescription\": \"<string>\",\n   \"fieldType\": {\n    \"field\": \"<string>\",\n    \"fieldName\": \"<string>\",\n    \"shareholderCode\": \"<string>\"\n   }\n  }\n ],\n \"resultCode\": \"<string>\",\n \"totalBalance\": {\n  \"balance\": [\n   {\n    \"value\": \"<long>\",\n    \"currency\": \"<string>\"\n   },\n   {\n    \"value\": \"<long>\",\n    \"currency\": \"<string>\"\n   }\n  ],\n  \"onHoldBalance\": [\n   {\n    \"value\": \"<long>\",\n    \"currency\": \"<string>\"\n   },\n   {\n    \"value\": \"<long>\",\n    \"currency\": \"<string>\"\n   }\n  ],\n  \"pendingBalance\": [\n   {\n    \"value\": \"<long>\",\n    \"currency\": \"<string>\"\n   },\n   {\n    \"value\": \"<long>\",\n    \"currency\": \"<string>\"\n   }\n  ]\n }\n}"
				}
			]
		},
		{
			"name": "Retrieve a list of transactions.",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"accountHolderCode\": \"<string>\",\n    \"transactionListsPerAccount\": [\n        {\n            \"accountCode\": \"<string>\",\n            \"page\": \"<integer>\"\n        },\n        {\n            \"accountCode\": \"<string>\",\n            \"page\": \"<integer>\"\n        }\n    ],\n    \"transactionStatuses\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}",
					"options": {
						"raw": {}
					}
				},
				"url": "{{baseUrl}}/accountHolderTransactionList",
				"description": "This endpoint is used to retrieve a list of Transactions for an account holder's accounts. The accounts and Transaction Statuses to be included on the list can be specified. Each call will return a maximum of fifty (50) Transactions per account; in order to retrieve the following set of Transactions another call should be made with the 'page' value incremented. Note that Transactions are ordered with most recent first."
			},
			"response": [
				{
					"name": "Internal Server Error - the server could not process the request.",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"accountHolderCode\": \"<string>\",\n    \"transactionListsPerAccount\": [\n        {\n            \"accountCode\": \"<string>\",\n            \"page\": \"<integer>\"\n        },\n        {\n            \"accountCode\": \"<string>\",\n            \"page\": \"<integer>\"\n        }\n    ],\n    \"transactionStatuses\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
						},
						"url": "{{baseUrl}}/accountHolderTransactionList"
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "OK - the request has succeeded.",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"accountHolderCode\": \"<string>\",\n    \"transactionListsPerAccount\": [\n        {\n            \"accountCode\": \"<string>\",\n            \"page\": \"<integer>\"\n        },\n        {\n            \"accountCode\": \"<string>\",\n            \"page\": \"<integer>\"\n        }\n    ],\n    \"transactionStatuses\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
						},
						"url": "{{baseUrl}}/accountHolderTransactionList"
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"pspReference\": \"<string>\",\n \"accountTransactionLists\": [\n  {\n   \"accountCode\": \"<string>\",\n   \"hasNextPage\": \"<boolean>\",\n   \"transactions\": [\n    {\n     \"amount\": {\n      \"value\": \"<long>\",\n      \"currency\": \"<string>\"\n     },\n     \"bankAccountDetail\": {\n      \"accountNumber\": \"<string>\",\n      \"accountType\": \"<string>\",\n      \"bankAccountName\": \"<string>\",\n      \"bankAccountReference\": \"<string>\",\n      \"bankAccountUUID\": \"<string>\",\n      \"bankBicSwift\": \"<string>\",\n      \"bankCity\": \"<string>\",\n      \"bankCode\": \"<string>\",\n      \"bankName\": \"<string>\",\n      \"branchCode\": \"<string>\",\n      \"checkCode\": \"<string>\",\n      \"countryCode\": \"<string>\",\n      \"currencyCode\": \"<string>\",\n      \"iban\": \"<string>\",\n      \"ownerCity\": \"<string>\",\n      \"ownerCountryCode\": \"<string>\",\n      \"ownerDateOfBirth\": \"<string>\",\n      \"ownerHouseNumberOrName\": \"<string>\",\n      \"ownerName\": \"<string>\",\n      \"ownerNationality\": \"<string>\",\n      \"ownerPostalCode\": \"<string>\",\n      \"ownerState\": \"<string>\",\n      \"ownerStreet\": \"<string>\",\n      \"primaryAccount\": \"<boolean>\",\n      \"taxId\": \"<string>\",\n      \"urlForVerification\": \"<string>\"\n     },\n     \"captureMerchantReference\": \"<string>\",\n     \"capturePspReference\": \"<string>\",\n     \"creationDate\": \"<dateTime>\",\n     \"description\": \"<string>\",\n     \"destinationAccountCode\": \"<string>\",\n     \"disputePspReference\": \"<string>\",\n     \"disputeReasonCode\": \"<string>\",\n     \"merchantReference\": \"<string>\",\n     \"paymentPspReference\": \"<string>\",\n     \"payoutPspReference\": \"<string>\",\n     \"pspReference\": \"<string>\",\n     \"sourceAccountCode\": \"<string>\",\n     \"transactionStatus\": \"<string>\",\n     \"transferCode\": \"<string>\"\n    },\n    {\n     \"amount\": {\n      \"value\": \"<long>\",\n      \"currency\": \"<string>\"\n     },\n     \"bankAccountDetail\": {\n      \"accountNumber\": \"<string>\",\n      \"accountType\": \"<string>\",\n      \"bankAccountName\": \"<string>\",\n      \"bankAccountReference\": \"<string>\",\n      \"bankAccountUUID\": \"<string>\",\n      \"bankBicSwift\": \"<string>\",\n      \"bankCity\": \"<string>\",\n      \"bankCode\": \"<string>\",\n      \"bankName\": \"<string>\",\n      \"branchCode\": \"<string>\",\n      \"checkCode\": \"<string>\",\n      \"countryCode\": \"<string>\",\n      \"currencyCode\": \"<string>\",\n      \"iban\": \"<string>\",\n      \"ownerCity\": \"<string>\",\n      \"ownerCountryCode\": \"<string>\",\n      \"ownerDateOfBirth\": \"<string>\",\n      \"ownerHouseNumberOrName\": \"<string>\",\n      \"ownerName\": \"<string>\",\n      \"ownerNationality\": \"<string>\",\n      \"ownerPostalCode\": \"<string>\",\n      \"ownerState\": \"<string>\",\n      \"ownerStreet\": \"<string>\",\n      \"primaryAccount\": \"<boolean>\",\n      \"taxId\": \"<string>\",\n      \"urlForVerification\": \"<string>\"\n     },\n     \"captureMerchantReference\": \"<string>\",\n     \"capturePspReference\": \"<string>\",\n     \"creationDate\": \"<dateTime>\",\n     \"description\": \"<string>\",\n     \"destinationAccountCode\": \"<string>\",\n     \"disputePspReference\": \"<string>\",\n     \"disputeReasonCode\": \"<string>\",\n     \"merchantReference\": \"<string>\",\n     \"paymentPspReference\": \"<string>\",\n     \"payoutPspReference\": \"<string>\",\n     \"pspReference\": \"<string>\",\n     \"sourceAccountCode\": \"<string>\",\n     \"transactionStatus\": \"<string>\",\n     \"transferCode\": \"<string>\"\n    }\n   ]\n  },\n  {\n   \"accountCode\": \"<string>\",\n   \"hasNextPage\": \"<boolean>\",\n   \"transactions\": [\n    {\n     \"amount\": {\n      \"value\": \"<long>\",\n      \"currency\": \"<string>\"\n     },\n     \"bankAccountDetail\": {\n      \"accountNumber\": \"<string>\",\n      \"accountType\": \"<string>\",\n      \"bankAccountName\": \"<string>\",\n      \"bankAccountReference\": \"<string>\",\n      \"bankAccountUUID\": \"<string>\",\n      \"bankBicSwift\": \"<string>\",\n      \"bankCity\": \"<string>\",\n      \"bankCode\": \"<string>\",\n      \"bankName\": \"<string>\",\n      \"branchCode\": \"<string>\",\n      \"checkCode\": \"<string>\",\n      \"countryCode\": \"<string>\",\n      \"currencyCode\": \"<string>\",\n      \"iban\": \"<string>\",\n      \"ownerCity\": \"<string>\",\n      \"ownerCountryCode\": \"<string>\",\n      \"ownerDateOfBirth\": \"<string>\",\n      \"ownerHouseNumberOrName\": \"<string>\",\n      \"ownerName\": \"<string>\",\n      \"ownerNationality\": \"<string>\",\n      \"ownerPostalCode\": \"<string>\",\n      \"ownerState\": \"<string>\",\n      \"ownerStreet\": \"<string>\",\n      \"primaryAccount\": \"<boolean>\",\n      \"taxId\": \"<string>\",\n      \"urlForVerification\": \"<string>\"\n     },\n     \"captureMerchantReference\": \"<string>\",\n     \"capturePspReference\": \"<string>\",\n     \"creationDate\": \"<dateTime>\",\n     \"description\": \"<string>\",\n     \"destinationAccountCode\": \"<string>\",\n     \"disputePspReference\": \"<string>\",\n     \"disputeReasonCode\": \"<string>\",\n     \"merchantReference\": \"<string>\",\n     \"paymentPspReference\": \"<string>\",\n     \"payoutPspReference\": \"<string>\",\n     \"pspReference\": \"<string>\",\n     \"sourceAccountCode\": \"<string>\",\n     \"transactionStatus\": \"<string>\",\n     \"transferCode\": \"<string>\"\n    },\n    {\n     \"amount\": {\n      \"value\": \"<long>\",\n      \"currency\": \"<string>\"\n     },\n     \"bankAccountDetail\": {\n      \"accountNumber\": \"<string>\",\n      \"accountType\": \"<string>\",\n      \"bankAccountName\": \"<string>\",\n      \"bankAccountReference\": \"<string>\",\n      \"bankAccountUUID\": \"<string>\",\n      \"bankBicSwift\": \"<string>\",\n      \"bankCity\": \"<string>\",\n      \"bankCode\": \"<string>\",\n      \"bankName\": \"<string>\",\n      \"branchCode\": \"<string>\",\n      \"checkCode\": \"<string>\",\n      \"countryCode\": \"<string>\",\n      \"currencyCode\": \"<string>\",\n      \"iban\": \"<string>\",\n      \"ownerCity\": \"<string>\",\n      \"ownerCountryCode\": \"<string>\",\n      \"ownerDateOfBirth\": \"<string>\",\n      \"ownerHouseNumberOrName\": \"<string>\",\n      \"ownerName\": \"<string>\",\n      \"ownerNationality\": \"<string>\",\n      \"ownerPostalCode\": \"<string>\",\n      \"ownerState\": \"<string>\",\n      \"ownerStreet\": \"<string>\",\n      \"primaryAccount\": \"<boolean>\",\n      \"taxId\": \"<string>\",\n      \"urlForVerification\": \"<string>\"\n     },\n     \"captureMerchantReference\": \"<string>\",\n     \"capturePspReference\": \"<string>\",\n     \"creationDate\": \"<dateTime>\",\n     \"description\": \"<string>\",\n     \"destinationAccountCode\": \"<string>\",\n     \"disputePspReference\": \"<string>\",\n     \"disputeReasonCode\": \"<string>\",\n     \"merchantReference\": \"<string>\",\n     \"paymentPspReference\": \"<string>\",\n     \"payoutPspReference\": \"<string>\",\n     \"pspReference\": \"<string>\",\n     \"sourceAccountCode\": \"<string>\",\n     \"transactionStatus\": \"<string>\",\n     \"transferCode\": \"<string>\"\n    }\n   ]\n  }\n ],\n \"invalidFields\": [\n  {\n   \"errorCode\": \"<integer>\",\n   \"errorDescription\": \"<string>\",\n   \"fieldType\": {\n    \"field\": \"<string>\",\n    \"fieldName\": \"<string>\",\n    \"shareholderCode\": \"<string>\"\n   }\n  },\n  {\n   \"errorCode\": \"<integer>\",\n   \"errorDescription\": \"<string>\",\n   \"fieldType\": {\n    \"field\": \"<string>\",\n    \"fieldName\": \"<string>\",\n    \"shareholderCode\": \"<string>\"\n   }\n  }\n ],\n \"resultCode\": \"<string>\"\n}"
				},
				{
					"name": "Unprocessable Entity - a request validation error.",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"accountHolderCode\": \"<string>\",\n    \"transactionListsPerAccount\": [\n        {\n            \"accountCode\": \"<string>\",\n            \"page\": \"<integer>\"\n        },\n        {\n            \"accountCode\": \"<string>\",\n            \"page\": \"<integer>\"\n        }\n    ],\n    \"transactionStatuses\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
						},
						"url": "{{baseUrl}}/accountHolderTransactionList"
					},
					"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
					"code": 422,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Bad Request - a problem reading or understanding the request.",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"accountHolderCode\": \"<string>\",\n    \"transactionListsPerAccount\": [\n        {\n            \"accountCode\": \"<string>\",\n            \"page\": \"<integer>\"\n        },\n        {\n            \"accountCode\": \"<string>\",\n            \"page\": \"<integer>\"\n        }\n    ],\n    \"transactionStatuses\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
						},
						"url": "{{baseUrl}}/accountHolderTransactionList"
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Forbidden - insufficient permissions to process the request.",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"accountHolderCode\": \"<string>\",\n    \"transactionListsPerAccount\": [\n        {\n            \"accountCode\": \"<string>\",\n            \"page\": \"<integer>\"\n        },\n        {\n            \"accountCode\": \"<string>\",\n            \"page\": \"<integer>\"\n        }\n    ],\n    \"transactionStatuses\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
						},
						"url": "{{baseUrl}}/accountHolderTransactionList"
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Unauthorized - authentication required.",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"accountHolderCode\": \"<string>\",\n    \"transactionListsPerAccount\": [\n        {\n            \"accountCode\": \"<string>\",\n            \"page\": \"<integer>\"\n        },\n        {\n            \"accountCode\": \"<string>\",\n            \"page\": \"<integer>\"\n        }\n    ],\n    \"transactionStatuses\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
						},
						"url": "{{baseUrl}}/accountHolderTransactionList"
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Disburse a specified amount from an account to the account holder.",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"accountHolderCode\": \"<string>\",\n    \"accountCode\": \"<string>\",\n    \"amount\": {\n        \"value\": \"<long>\",\n        \"currency\": \"<string>\"\n    },\n    \"bankAccountUUID\": \"<string>\",\n    \"description\": \"<string>\",\n    \"merchantReference\": \"<string>\",\n    \"payoutMethodCode\": \"<string>\"\n}",
					"options": {
						"raw": {}
					}
				},
				"url": "{{baseUrl}}/payoutAccountHolder",
				"description": "This endpoint is used to pay out a specified amount from an account to the bank account of the account's account holder."
			},
			"response": [
				{
					"name": "Forbidden - insufficient permissions to process the request.",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"accountHolderCode\": \"<string>\",\n    \"accountCode\": \"<string>\",\n    \"amount\": {\n        \"value\": \"<long>\",\n        \"currency\": \"<string>\"\n    },\n    \"bankAccountUUID\": \"<string>\",\n    \"description\": \"<string>\",\n    \"merchantReference\": \"<string>\",\n    \"payoutMethodCode\": \"<string>\"\n}"
						},
						"url": "{{baseUrl}}/payoutAccountHolder"
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Unauthorized - authentication required.",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"accountHolderCode\": \"<string>\",\n    \"accountCode\": \"<string>\",\n    \"amount\": {\n        \"value\": \"<long>\",\n        \"currency\": \"<string>\"\n    },\n    \"bankAccountUUID\": \"<string>\",\n    \"description\": \"<string>\",\n    \"merchantReference\": \"<string>\",\n    \"payoutMethodCode\": \"<string>\"\n}"
						},
						"url": "{{baseUrl}}/payoutAccountHolder"
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "OK - the request has succeeded.",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"accountHolderCode\": \"<string>\",\n    \"accountCode\": \"<string>\",\n    \"amount\": {\n        \"value\": \"<long>\",\n        \"currency\": \"<string>\"\n    },\n    \"bankAccountUUID\": \"<string>\",\n    \"description\": \"<string>\",\n    \"merchantReference\": \"<string>\",\n    \"payoutMethodCode\": \"<string>\"\n}"
						},
						"url": "{{baseUrl}}/payoutAccountHolder"
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"pspReference\": \"<string>\",\n \"bankAccountUUID\": \"<string>\",\n \"invalidFields\": [\n  {\n   \"errorCode\": \"<integer>\",\n   \"errorDescription\": \"<string>\",\n   \"fieldType\": {\n    \"field\": \"<string>\",\n    \"fieldName\": \"<string>\",\n    \"shareholderCode\": \"<string>\"\n   }\n  },\n  {\n   \"errorCode\": \"<integer>\",\n   \"errorDescription\": \"<string>\",\n   \"fieldType\": {\n    \"field\": \"<string>\",\n    \"fieldName\": \"<string>\",\n    \"shareholderCode\": \"<string>\"\n   }\n  }\n ],\n \"merchantReference\": \"<string>\",\n \"resultCode\": \"<string>\"\n}"
				},
				{
					"name": "Bad Request - a problem reading or understanding the request.",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"accountHolderCode\": \"<string>\",\n    \"accountCode\": \"<string>\",\n    \"amount\": {\n        \"value\": \"<long>\",\n        \"currency\": \"<string>\"\n    },\n    \"bankAccountUUID\": \"<string>\",\n    \"description\": \"<string>\",\n    \"merchantReference\": \"<string>\",\n    \"payoutMethodCode\": \"<string>\"\n}"
						},
						"url": "{{baseUrl}}/payoutAccountHolder"
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Internal Server Error - the server could not process the request.",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"accountHolderCode\": \"<string>\",\n    \"accountCode\": \"<string>\",\n    \"amount\": {\n        \"value\": \"<long>\",\n        \"currency\": \"<string>\"\n    },\n    \"bankAccountUUID\": \"<string>\",\n    \"description\": \"<string>\",\n    \"merchantReference\": \"<string>\",\n    \"payoutMethodCode\": \"<string>\"\n}"
						},
						"url": "{{baseUrl}}/payoutAccountHolder"
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Unprocessable Entity - a request validation error.",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"accountHolderCode\": \"<string>\",\n    \"accountCode\": \"<string>\",\n    \"amount\": {\n        \"value\": \"<long>\",\n        \"currency\": \"<string>\"\n    },\n    \"bankAccountUUID\": \"<string>\",\n    \"description\": \"<string>\",\n    \"merchantReference\": \"<string>\",\n    \"payoutMethodCode\": \"<string>\"\n}"
						},
						"url": "{{baseUrl}}/payoutAccountHolder"
					},
					"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
					"code": 422,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Make a refund of the existing transfer funds transfer.",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"originalReference\": \"<string>\",\n    \"amount\": {\n        \"value\": \"<long>\",\n        \"currency\": \"<string>\"\n    },\n    \"merchantReference\": \"<string>\"\n}",
					"options": {
						"raw": {}
					}
				},
				"url": "{{baseUrl}}/refundFundsTransfer",
				"description": "This endpoint is used to refund funds transferred from one account to another. Both accounts must be in the same marketplace, but can have different account holders. "
			},
			"response": [
				{
					"name": "Forbidden - insufficient permissions to process the request.",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"originalReference\": \"<string>\",\n    \"amount\": {\n        \"value\": \"<long>\",\n        \"currency\": \"<string>\"\n    },\n    \"merchantReference\": \"<string>\"\n}"
						},
						"url": "{{baseUrl}}/refundFundsTransfer"
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Unprocessable Entity - a request validation error.",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"originalReference\": \"<string>\",\n    \"amount\": {\n        \"value\": \"<long>\",\n        \"currency\": \"<string>\"\n    },\n    \"merchantReference\": \"<string>\"\n}"
						},
						"url": "{{baseUrl}}/refundFundsTransfer"
					},
					"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
					"code": 422,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Bad Request - a problem reading or understanding the request.",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"originalReference\": \"<string>\",\n    \"amount\": {\n        \"value\": \"<long>\",\n        \"currency\": \"<string>\"\n    },\n    \"merchantReference\": \"<string>\"\n}"
						},
						"url": "{{baseUrl}}/refundFundsTransfer"
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Internal Server Error - the server could not process the request.",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"originalReference\": \"<string>\",\n    \"amount\": {\n        \"value\": \"<long>\",\n        \"currency\": \"<string>\"\n    },\n    \"merchantReference\": \"<string>\"\n}"
						},
						"url": "{{baseUrl}}/refundFundsTransfer"
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "OK - the request has succeeded.",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"originalReference\": \"<string>\",\n    \"amount\": {\n        \"value\": \"<long>\",\n        \"currency\": \"<string>\"\n    },\n    \"merchantReference\": \"<string>\"\n}"
						},
						"url": "{{baseUrl}}/refundFundsTransfer"
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"pspReference\": \"<string>\",\n \"invalidFields\": [\n  {\n   \"errorCode\": \"<integer>\",\n   \"errorDescription\": \"<string>\",\n   \"fieldType\": {\n    \"field\": \"<string>\",\n    \"fieldName\": \"<string>\",\n    \"shareholderCode\": \"<string>\"\n   }\n  },\n  {\n   \"errorCode\": \"<integer>\",\n   \"errorDescription\": \"<string>\",\n   \"fieldType\": {\n    \"field\": \"<string>\",\n    \"fieldName\": \"<string>\",\n    \"shareholderCode\": \"<string>\"\n   }\n  }\n ],\n \"merchantReference\": \"<string>\",\n \"message\": \"<string>\",\n \"originalReference\": \"<string>\",\n \"resultCode\": \"<string>\"\n}"
				},
				{
					"name": "Unauthorized - authentication required.",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"originalReference\": \"<string>\",\n    \"amount\": {\n        \"value\": \"<long>\",\n        \"currency\": \"<string>\"\n    },\n    \"merchantReference\": \"<string>\"\n}"
						},
						"url": "{{baseUrl}}/refundFundsTransfer"
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Refund all transactions of an account since the most recent payout.",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"accountHolderCode\": \"<string>\",\n    \"accountCode\": \"<string>\"\n}",
					"options": {
						"raw": {}
					}
				},
				"url": "{{baseUrl}}/refundNotPaidOutTransfers",
				"description": "This endpoint is used to refund all the transactions of an account which have taken place since the most recent payout. This request is on a per-account basis (as opposed to a per-payment basis), so only the portion of the payment which was made to the specified account will be refunded. The commission(s), fee(s), and payment(s) to other account(s), will remain in the accounts to which they were sent as designated by the original payment's split details."
			},
			"response": [
				{
					"name": "Internal Server Error - the server could not process the request.",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"accountHolderCode\": \"<string>\",\n    \"accountCode\": \"<string>\"\n}"
						},
						"url": "{{baseUrl}}/refundNotPaidOutTransfers"
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Forbidden - insufficient permissions to process the request.",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"accountHolderCode\": \"<string>\",\n    \"accountCode\": \"<string>\"\n}"
						},
						"url": "{{baseUrl}}/refundNotPaidOutTransfers"
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Unprocessable Entity - a request validation error.",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"accountHolderCode\": \"<string>\",\n    \"accountCode\": \"<string>\"\n}"
						},
						"url": "{{baseUrl}}/refundNotPaidOutTransfers"
					},
					"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
					"code": 422,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "OK - the request has succeeded.",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"accountHolderCode\": \"<string>\",\n    \"accountCode\": \"<string>\"\n}"
						},
						"url": "{{baseUrl}}/refundNotPaidOutTransfers"
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"pspReference\": \"<string>\",\n \"invalidFields\": [\n  {\n   \"errorCode\": \"<integer>\",\n   \"errorDescription\": \"<string>\",\n   \"fieldType\": {\n    \"field\": \"<string>\",\n    \"fieldName\": \"<string>\",\n    \"shareholderCode\": \"<string>\"\n   }\n  },\n  {\n   \"errorCode\": \"<integer>\",\n   \"errorDescription\": \"<string>\",\n   \"fieldType\": {\n    \"field\": \"<string>\",\n    \"fieldName\": \"<string>\",\n    \"shareholderCode\": \"<string>\"\n   }\n  }\n ],\n \"resultCode\": \"<string>\"\n}"
				},
				{
					"name": "Unauthorized - authentication required.",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"accountHolderCode\": \"<string>\",\n    \"accountCode\": \"<string>\"\n}"
						},
						"url": "{{baseUrl}}/refundNotPaidOutTransfers"
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Bad Request - a problem reading or understanding the request.",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"accountHolderCode\": \"<string>\",\n    \"accountCode\": \"<string>\"\n}"
						},
						"url": "{{baseUrl}}/refundNotPaidOutTransfers"
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Designate an account to be the beneficiary of a separate account and transfer the benefactor's current balance to the beneficiary.",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"sourceAccountCode\": \"<string>\",\n    \"destinationAccountCode\": \"<string>\",\n    \"merchantReference\": \"<string>\"\n}",
					"options": {
						"raw": {}
					}
				},
				"url": "{{baseUrl}}/setupBeneficiary",
				"description": "This endpoint is used to define a benefactor and a beneficiary relationship between two accounts. At the time of benefactor/beneficiary setup, the funds in the benefactor account are transferred to the beneficiary account, and any further payments to the benefactor account are automatically sent to the beneficiary account. Note that a series of benefactor/beneficiaries may not exceed four (4) beneficiaries and may not have a cycle in it."
			},
			"response": [
				{
					"name": "Internal Server Error - the server could not process the request.",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"sourceAccountCode\": \"<string>\",\n    \"destinationAccountCode\": \"<string>\",\n    \"merchantReference\": \"<string>\"\n}"
						},
						"url": "{{baseUrl}}/setupBeneficiary"
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Unauthorized - authentication required.",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"sourceAccountCode\": \"<string>\",\n    \"destinationAccountCode\": \"<string>\",\n    \"merchantReference\": \"<string>\"\n}"
						},
						"url": "{{baseUrl}}/setupBeneficiary"
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Forbidden - insufficient permissions to process the request.",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"sourceAccountCode\": \"<string>\",\n    \"destinationAccountCode\": \"<string>\",\n    \"merchantReference\": \"<string>\"\n}"
						},
						"url": "{{baseUrl}}/setupBeneficiary"
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "OK - the request has succeeded.",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"sourceAccountCode\": \"<string>\",\n    \"destinationAccountCode\": \"<string>\",\n    \"merchantReference\": \"<string>\"\n}"
						},
						"url": "{{baseUrl}}/setupBeneficiary"
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"pspReference\": \"<string>\",\n \"invalidFields\": [\n  {\n   \"errorCode\": \"<integer>\",\n   \"errorDescription\": \"<string>\",\n   \"fieldType\": {\n    \"field\": \"<string>\",\n    \"fieldName\": \"<string>\",\n    \"shareholderCode\": \"<string>\"\n   }\n  },\n  {\n   \"errorCode\": \"<integer>\",\n   \"errorDescription\": \"<string>\",\n   \"fieldType\": {\n    \"field\": \"<string>\",\n    \"fieldName\": \"<string>\",\n    \"shareholderCode\": \"<string>\"\n   }\n  }\n ],\n \"resultCode\": \"<string>\"\n}"
				},
				{
					"name": "Unprocessable Entity - a request validation error.",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"sourceAccountCode\": \"<string>\",\n    \"destinationAccountCode\": \"<string>\",\n    \"merchantReference\": \"<string>\"\n}"
						},
						"url": "{{baseUrl}}/setupBeneficiary"
					},
					"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
					"code": 422,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Bad Request - a problem reading or understanding the request.",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"sourceAccountCode\": \"<string>\",\n    \"destinationAccountCode\": \"<string>\",\n    \"merchantReference\": \"<string>\"\n}"
						},
						"url": "{{baseUrl}}/setupBeneficiary"
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Transfer funds from one platform account to another.",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"sourceAccountCode\": \"<string>\",\n    \"destinationAccountCode\": \"<string>\",\n    \"transferCode\": \"<string>\",\n    \"amount\": {\n        \"value\": \"<long>\",\n        \"currency\": \"<string>\"\n    },\n    \"merchantReference\": \"<string>\"\n}",
					"options": {
						"raw": {}
					}
				},
				"url": "{{baseUrl}}/transferFunds",
				"description": "This endpoint is used to transfer funds from one account to another account. Both accounts must be in the same marketplace, but can have different account holders. The transfer must include a transfer code, which should be determined by the marketplace, in compliance with local regulations."
			},
			"response": [
				{
					"name": "Internal Server Error - the server could not process the request.",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"sourceAccountCode\": \"<string>\",\n    \"destinationAccountCode\": \"<string>\",\n    \"transferCode\": \"<string>\",\n    \"amount\": {\n        \"value\": \"<long>\",\n        \"currency\": \"<string>\"\n    },\n    \"merchantReference\": \"<string>\"\n}"
						},
						"url": "{{baseUrl}}/transferFunds"
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Forbidden - insufficient permissions to process the request.",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"sourceAccountCode\": \"<string>\",\n    \"destinationAccountCode\": \"<string>\",\n    \"transferCode\": \"<string>\",\n    \"amount\": {\n        \"value\": \"<long>\",\n        \"currency\": \"<string>\"\n    },\n    \"merchantReference\": \"<string>\"\n}"
						},
						"url": "{{baseUrl}}/transferFunds"
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Bad Request - a problem reading or understanding the request.",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"sourceAccountCode\": \"<string>\",\n    \"destinationAccountCode\": \"<string>\",\n    \"transferCode\": \"<string>\",\n    \"amount\": {\n        \"value\": \"<long>\",\n        \"currency\": \"<string>\"\n    },\n    \"merchantReference\": \"<string>\"\n}"
						},
						"url": "{{baseUrl}}/transferFunds"
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "OK - the request has succeeded.",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"sourceAccountCode\": \"<string>\",\n    \"destinationAccountCode\": \"<string>\",\n    \"transferCode\": \"<string>\",\n    \"amount\": {\n        \"value\": \"<long>\",\n        \"currency\": \"<string>\"\n    },\n    \"merchantReference\": \"<string>\"\n}"
						},
						"url": "{{baseUrl}}/transferFunds"
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"pspReference\": \"<string>\",\n \"invalidFields\": [\n  {\n   \"errorCode\": \"<integer>\",\n   \"errorDescription\": \"<string>\",\n   \"fieldType\": {\n    \"field\": \"<string>\",\n    \"fieldName\": \"<string>\",\n    \"shareholderCode\": \"<string>\"\n   }\n  },\n  {\n   \"errorCode\": \"<integer>\",\n   \"errorDescription\": \"<string>\",\n   \"fieldType\": {\n    \"field\": \"<string>\",\n    \"fieldName\": \"<string>\",\n    \"shareholderCode\": \"<string>\"\n   }\n  }\n ],\n \"merchantReference\": \"<string>\",\n \"resultCode\": \"<string>\"\n}"
				},
				{
					"name": "Unauthorized - authentication required.",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"sourceAccountCode\": \"<string>\",\n    \"destinationAccountCode\": \"<string>\",\n    \"transferCode\": \"<string>\",\n    \"amount\": {\n        \"value\": \"<long>\",\n        \"currency\": \"<string>\"\n    },\n    \"merchantReference\": \"<string>\"\n}"
						},
						"url": "{{baseUrl}}/transferFunds"
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Unprocessable Entity - a request validation error.",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"sourceAccountCode\": \"<string>\",\n    \"destinationAccountCode\": \"<string>\",\n    \"transferCode\": \"<string>\",\n    \"amount\": {\n        \"value\": \"<long>\",\n        \"currency\": \"<string>\"\n    },\n    \"merchantReference\": \"<string>\"\n}"
						},
						"url": "{{baseUrl}}/transferFunds"
					},
					"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
					"code": 422,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		}
	],
	"variable": [
		{
			"id": "baseUrl",
			"key": "baseUrl",
			"value": "https://cal-test.duniapay.net/cal/services/Fund/v5",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}